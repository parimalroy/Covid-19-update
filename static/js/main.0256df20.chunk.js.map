{"version":3,"sources":["components/ContinentCard.jsx","components/CardDisplay.jsx","components/Layout.jsx","components/CovidData.jsx","components/Asia.jsx","components/NavbarNew.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContinentCard","props","className","color","title","class","scope","TodayCases","TodayDeaths","TotalCase","TotalDeaths","ActiveCase","Recovered","CardDisplay","dataColor","updateData","Layout","useState","data","setData","myFormat","Intl","NumberFormat","getWroldData","a","fetch","response","json","getData","find","item","country","console","log","useEffect","format","cases","todayCases","deaths","todayDeaths","recovered","active","TodayCase","TodayDeath","TotalCases","Active","TotalTests","getCovidData","setBdDatas","allItem","i","length","push","CovidData","bdData","setBdData","totalTests","asiaCountry","Asia","worldData","setWorldData","map","items","index","NavbarNew","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","exact","activeClassName","to","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0256df20.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./../layout.css\";\r\n\r\nconst ContinentCard = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"card-columns col-lg-6 col-md-6 col-sm-12 col-12 card-display\">\r\n        <div className=\"card card-primary \">\r\n          <div className=\"card-body\" className={props.color}>\r\n            <p className=\"data-title text-center\">{props.title}</p>\r\n            <table class=\"table table-striped col-12\">\r\n              <tbody>\r\n                <tr>\r\n                  <th scope=\"row\"></th>\r\n                  <td>Today Cases: {props.TodayCases} </td>\r\n                  <td>Today Deaths: {props.TodayDeaths} </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\"></th>\r\n                  <td>Total Cases: {props.TotalCase} </td>\r\n                  <td>Total Deaths: {props.TotalDeaths} </td>\r\n                </tr>\r\n                <tr>\r\n                  <th scope=\"row\"></th>\r\n                  <td>Active Cases: {props.ActiveCase}</td>\r\n                  <td>Recovered: {props.Recovered}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default ContinentCard;\r\n","import React from \"react\";\r\nimport \"./../layout.css\";\r\n\r\nconst CardDisplay = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"card-columns col-lg-6 col-md-6 col-sm-12 col-12 card-display\">\r\n        <div className=\"card card-primary \">\r\n          <div className=\"card-body \" className={props.color}>\r\n            <p className=\"data-title\">{props.title}</p>\r\n            <p className=\"updateData\" className={props.dataColor}>\r\n              {props.updateData}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CardDisplay;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./../layout.css\";\r\nimport CardDisplay from \"./CardDisplay\";\r\nconst Layout = (props) => {\r\n  const [data, setData] = useState([]);\r\n  let myFormat = Intl.NumberFormat(\"en-US\");\r\n\r\n  const getWroldData = async () => {\r\n    try {\r\n      let response = await fetch(\r\n        \"https://coronavirus-19-api.herokuapp.com/countries\"\r\n      );\r\n      let getData = await response.json();\r\n      return getData.find((item) => {\r\n        if (item.country == \"World\") {\r\n          setData(item);\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWroldData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <div className=\"row justify-content-center header bg-danger\">\r\n          <div className=\"col-12 text-center\">\r\n            {/* <NavbarNew /> */}\r\n            {/* <h2 className=\"head\">Stay Home Stay Safe</h2> */}\r\n          </div>\r\n        </div>\r\n        <div className=\"row content\">\r\n          <div className=\"col-lg-4 col-md-6 col-sm-12 col-12 left-content text-center\">\r\n            <h4>World Covid-19 Cases:</h4> <hr />\r\n            <div className=\"card\">\r\n              <div className=\"card-header \">\r\n                Total Cases:\r\n                 <span className=\"text-success updateData\">\r\n                   {myFormat.format(data.cases)}\r\n                </span>\r\n              </div>\r\n              <ul className=\"list-group list-group-flush\">\r\n                <li className=\"list-group-item\">\r\n                  Today Case:\r\n                  <span className=\"text-success updateData\">\r\n                    {myFormat.format(data.todayCases)}\r\n                  </span>\r\n                </li>\r\n                {/* <li className=\"list-group-item\">Today Case:</li> */}\r\n                <li className=\"list-group-item\">\r\n                  Total Deaths:\r\n                  <p className=\"text-danger updateData\">\r\n                    {myFormat.format(data.deaths)}\r\n                  </p>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Today Deaths:\r\n                  <p className=\"text-danger updateData\">\r\n                    {myFormat.format(data.todayDeaths)}\r\n                  </p>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Recovered:\r\n                  <p className=\"text-success updateData\">\r\n                    {myFormat.format(data.recovered)}\r\n                  </p>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  Active:\r\n                  <span className=\"text-success updateData\">\r\n                    {myFormat.format(data.active)}\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-8 col-md-6 col-sm-12 col-12  right-content text-center\">\r\n            <h4>Bangladesh Covid-19 Cases:</h4> <hr />\r\n            <div className=\"row justify-content-center\">\r\n              <CardDisplay\r\n                color=\"box-color\"\r\n                dataColor=\"text-danger\"\r\n                title=\"Today Cases:\"\r\n                updateData={props.TodayCase}\r\n              />\r\n              <CardDisplay\r\n                color=\"box-color\"\r\n                dataColor=\"text-danger\"\r\n                title=\"Today Deaths:\"\r\n                updateData={props.TodayDeath}\r\n              />\r\n              <CardDisplay\r\n                color=\"box-color\"\r\n                dataColor=\"text-success\"\r\n                title=\"Total Cases:\"\r\n                updateData={props.TotalCases}\r\n              />\r\n              <CardDisplay\r\n                color=\"box-color\"\r\n                dataColor=\"text-danger\"\r\n                title=\"Total Deaths:\"\r\n                updateData={props.TotalDeaths}\r\n              />\r\n              <CardDisplay\r\n                color=\"box-color\"\r\n                dataColor=\"text-success\"\r\n                title=\"Active Cases:\"\r\n                updateData={props.Active}\r\n              />\r\n              <CardDisplay\r\n                color=\"box-color\"\r\n                dataColor=\"text-success\"\r\n                title=\"Recovered:\"\r\n                updateData={props.Recovered}\r\n              />\r\n              <CardDisplay\r\n                color=\"box-color\"\r\n                dataColor=\"text-success\"\r\n                title=\"Total Test:\"\r\n                updateData={props.TotalTests}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Layout;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"./Layout\";\r\nconst getCovidData = async (data,setBdDatas) => {\r\n  try {\r\n    let allItem = [];\r\n    let response = await fetch(\r\n      \"https://coronavirus-19-api.herokuapp.com/countries\"\r\n    );\r\n    let result = await response.json();\r\n    // return result\r\n    result.find((item) => {\r\n       for (let i=0; i<=data.length; i++) {\r\n        if(item.country == data[i]) {\r\n          allItem.push(item)\r\n          setBdDatas([...allItem])\r\n          //console.log(allItem)\r\n        }\r\n      }\r\n      });\r\n\r\n    //return allItem;\r\n    //console.log(newData)\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\n\r\nconst CovidData = (props) => {\r\n\r\n  let myFormat = Intl.NumberFormat(\"en-US\");\r\n  const [bdData, setBdData] = useState(['Bangladesh']);\r\n\r\n  useEffect(() => {\r\n    getCovidData(bdData,setBdData);\r\n   // getCovidData();\r\n  }, []);\r\n  console.log(bdData[0].country);\r\n  return (\r\n    <>\r\n      <Layout\r\n        TodayCase={\r\n          bdData[0].todayCases == 0\r\n            ? '\" Waiting for today update \"'\r\n            : myFormat.format(bdData[0].todayCases)\r\n        }\r\n        TodayDeath={\r\n          bdData[0].todayDeaths == 0\r\n            ? '\" Waiting for today update \"'\r\n            : myFormat.format(bdData[0].todayDeaths)\r\n        }\r\n        TotalCases={myFormat.format(bdData[0].cases)}\r\n        TotalDeaths={myFormat.format(bdData[0].deaths)}\r\n        Active={myFormat.format(bdData[0].active)}\r\n        Recovered={myFormat.format(bdData[0].recovered)}\r\n        TotalTests={myFormat.format(bdData[0].totalTests)}\r\n      />\r\n      )\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CovidData;\r\nexport { getCovidData };\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./../layout.css\";\r\nimport ContinentCard from './ContinentCard';\r\nimport { getCovidData } from \"./CovidData\";\r\n\r\nconst asiaCountry =['India','Nepal','China','Pakistan','Singapore','Sri Lanka']\r\nconst Asia = (props) => {\r\n  let myFormat = Intl.NumberFormat(\"en-US\");\r\n  const [worldData, setWorldData] = useState([]);\r\n  useEffect(() => {\r\n    getCovidData(asiaCountry, setWorldData);\r\n  }, []);\r\n console.log(worldData);\r\n// console.log(setWorldData)\r\n  return (\r\n    <>\r\n      <div className=\"row justify-content-center\">\r\n        <h4 className=\"text-center m-4\">Asia Covid-19 Cases:</h4> <hr />\r\n        <div className=\"row justify-content-center\">\r\n        {\r\n        worldData.map((items,index )=> {\r\n          //console.log(worldData);\r\n          return (\r\n            <ContinentCard\r\n              key={index}\r\n              color=\"box-color\"\r\n              dataColor=\"text-danger\"\r\n              title={items.country}\r\n              TodayCases={myFormat.format(items.todayCases)}\r\n              TodayDeaths={myFormat.format(items.todayDeaths)}\r\n              TotalCase={myFormat.format(items.cases)}\r\n              TotalDeaths={myFormat.format(items.deaths)}\r\n              ActiveCase={myFormat.format(items.active)}\r\n              Recovered={myFormat.format(items.recovered)}\r\n            />\r\n          );\r\n        })\r\n        }\r\n\r\n\r\n        {/* <ContinentCard\r\n          color=\"box-color\"\r\n          dataColor=\"text-danger\"\r\n          title={worldData.country}\r\n          TodayCases={worldData.todayCases}\r\n          TodayDeaths={worldData.TodayDeaths}\r\n          TotalCase={worldData.cases}\r\n          TotalDeaths={worldData.deaths}\r\n          ActiveCase={worldData.active}\r\n          Recovered={worldData.recovered} \r\n\r\n        /> */}\r\n       </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Asia;\r\n","import { Nav, Navbar } from \"react-bootstrap\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"./../layout.css\";\r\n\r\nconst NavbarNew = () => {\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand=\"sm md\" bg=\"\" className=\"NavItem\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\" className=\"brand\">\r\n          <h2>Covid-19 Update</h2>\r\n          <span>Stay Home Stay Safe</span>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"navItem\">\r\n            <Nav.Link href=\"#deets\" className=\"text-white items\">\r\n              <NavLink exact activeClassName=\"activeNav\" to='./covid-19-update'>\r\n              Home\r\n              </NavLink>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#memes\" className=\"text-white items\">\r\n              <NavLink exact  to='./covid-19-update/asia' activeClassName=\"activeNav\">\r\n                Asia\r\n              </NavLink>\r\n              \r\n            </Nav.Link>\r\n            <Nav.Link href=\"#memes\" className=\"text-white items\">\r\n              Europe\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\nexport default NavbarNew;\r\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Asia from './components/Asia';\nimport CovidData from './components/CovidData';\nimport NavbarNew from './components/NavbarNew';\nimport \"./layout.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <NavbarNew />\n      <Switch>\n        <Route exact path='/covid-19-update'>\n         <CovidData />\n        </Route>\n        <Route path='/covid-19-update/asia'>\n         <Asia />\n        </Route>\n        <Redirect to='/covid-19-update' />\n     </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport \"./layout.css\";\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/CardDisplay.jsx","components/Layout.jsx","components/CovidData.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardDisplay","props","className","color","title","dataColor","updateData","Layout","useState","data","setData","myFormat","Intl","NumberFormat","getWroldData","a","fetch","response","json","getData","find","item","country","console","log","useEffect","format","cases","todayCases","deaths","todayDeaths","recovered","active","TodayCase","TodayDeath","TotalCases","TotalDeaths","Active","Recovered","TotalTests","CovidData","bdData","setBdData","getCovidData","result","totalTests","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9998023.chunk.js","sourcesContent":["import React from 'react'\r\nimport './../layout.css'\r\n\r\nconst CardDisplay =(props)=>{\r\n    return(\r\n        <>\r\n            <div className=\"card-columns col-lg-6 col-md-6 col-sm-12 col-12 card-display\">\r\n                <div className=\"card card-primary \">\r\n                    <div className=\"card-body \" className={props.color}>\r\n                        <p className=\"data-title\">{props.title}</p>\r\n                        <p className=\"updateData\" className={props.dataColor}>{props.updateData}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CardDisplay;","import React, { useEffect, useState } from 'react'\r\nimport './../layout.css'\r\nimport CardDisplay from './CardDisplay'\r\nconst Layout =(props)=>{\r\n    const [data, setData] = useState([])\r\n    let myFormat = Intl.NumberFormat('en-US');\r\n\r\n    const getWroldData = async()=>{\r\n        try{\r\n            let response= await fetch('https://coronavirus-19-api.herokuapp.com/countries')\r\n            let getData = await response.json();\r\n            return getData.find((item)=>{\r\n                if(item.country=='World'){\r\n                    setData(item)\r\n                }\r\n            })\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getWroldData()\r\n    },[])\r\n    return(\r\n        <>\r\n            <div className='container'>\r\n                <div className=\"row justify-content-center header\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <h2 className=\"head\">Stay Home Stay Safe</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row content\">\r\n                    <div className=\"col-lg-4 col-md-6 col-sm-12 col-12 left-content text-center\">\r\n                         <h4>World Covid-19 Cases:</h4> <hr />\r\n                         <div className=\"card\">\r\n                        <div className=\"card-header \">\r\n                            Total Cases: <span className=\"text-info updateData\">{myFormat.format(data.cases)}</span> \r\n                        </div>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            <li className=\"list-group-item\">Today Case: <span className=\"text-info updateData\"> {myFormat.format(data.todayCases)}</span></li>\r\n                            {/* <li className=\"list-group-item\">Today Case:</li> */}\r\n                            <li className=\"list-group-item\">Total Deaths: <p className=\"text-danger updateData\">{myFormat.format(data.deaths)}</p></li>\r\n                            <li className=\"list-group-item\">Today Deaths: <p className=\"text-danger updateData\"> {myFormat.format(data.todayDeaths)}</p></li>\r\n                            <li className=\"list-group-item\">Recovered:<p className=\"text-success updateData\">{myFormat.format(data.recovered)}</p></li>\r\n                            <li className=\"list-group-item\">Active: <span className=\"text-info updateData\">{myFormat.format(data.active)}</span></li>\r\n                        </ul>\r\n                        </div>                            \r\n                    </div>\r\n                    <div className=\"col-lg-8 col-md-6 col-sm-12 col-12  right-content text-center\">\r\n                         <h4>Bangladesh Covid-19 Cases:</h4> <hr />\r\n                         <div className=\"row justify-content-center\">\r\n                            <CardDisplay color=\"box-color\" dataColor=\"text-danger\" title=\"Today Cases:\" updateData={props.TodayCase}/>\r\n                            <CardDisplay color=\"box-color\" dataColor=\"text-danger\" title=\"Today Deaths:\" updateData={props.TodayDeath} />\r\n                            <CardDisplay color=\"box-color\" dataColor=\"text-info\" title=\"Total Cases:\" updateData={props.TotalCases} />\r\n                            <CardDisplay color=\"box-color\" dataColor=\"text-danger\" title=\"Total Deaths:\" updateData={props.TotalDeaths} />\r\n                            <CardDisplay color=\"box-color\" dataColor=\"text-info\" title=\"Active Cases:\" updateData={props.Active} />\r\n                            <CardDisplay color=\"box-color\" dataColor=\"text-success\" title=\"Recovered:\" updateData={props.Recovered} />\r\n                            <CardDisplay color=\"box-color\" dataColor=\"text-warning\" title=\"Total Test:\" updateData={props.TotalTests} />\r\n                         </div>\r\n                    </div>\r\n                 </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Layout;","import React, { useEffect, useState } from 'react'\r\nimport Layout from './Layout'\r\n\r\nconst CovidData = ()=>{\r\n    \r\n    let myFormat = Intl.NumberFormat('en-US');\r\n    const [bdData, setBdData]=useState([])\r\n\r\n    const getCovidData= async ()=>{\r\n        try{\r\n            let response= await fetch('https://coronavirus-19-api.herokuapp.com/countries')\r\n            let result = await response.json();\r\n            // return result\r\n            return result.find((item)=>{\r\n                if(item.country==\"Bangladesh\")\r\n                 setBdData(item)\r\n                })\r\n            //console.log(newData)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n       getCovidData()\r\n    },[])\r\n    console.log(bdData.todayCases)\r\n    return(\r\n        <>\r\n            <Layout TodayCase={bdData.todayCases==0?'\" Waiting for today update \"':myFormat.format(bdData.todayCases)}\r\n            TodayDeath={bdData.todayDeaths==0?'\" Waiting for today update \"':myFormat.format(bdData.todayDeaths)}\r\n            TotalCases={myFormat.format(bdData.cases)}\r\n            TotalDeaths={myFormat.format(bdData.deaths)}\r\n            Active={myFormat.format(bdData.active)}\r\n            Recovered={myFormat.format(bdData.recovered)}\r\n            TotalTests={myFormat.format(bdData.totalTests)}/>\r\n        </>\r\n    )\r\n}\r\n\r\n    export default CovidData","import './App.css';\nimport CovidData from './components/CovidData';\n\nfunction App() {\n  return (\n    <div>\n     <CovidData />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}